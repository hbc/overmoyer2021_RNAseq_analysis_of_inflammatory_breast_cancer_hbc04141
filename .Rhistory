guides(color = guide_legend(ncol = 1))
metadata2 %>%
ggplot(aes(x = sample,
y = log10(nGene),
fill = sample)) +
geom_boxplot() +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
theme(plot.title = element_text(hjust = 0.5, face = "bold"))
metadata2 %>%
ggplot(aes(x = sample, y = log10(nGene))) +
geom_violin(aes(fill = sample)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
metadata2 %>%
ggplot(aes(x = log10GenesPerUMI,
color = sample)) +
geom_density(alpha = 0.2) +
theme_classic() +
geom_vline(xintercept = 0.8)
metadata2 %>%
ggplot(aes(x = log10GenesPerUMI,
fill = sample)) +
geom_histogram(position = "dodge2") +
theme_classic() +
geom_vline(xintercept = 0.85)
sum(seurat_tseng$nUMI)
setwd("~/Desktop/code/single_cell/chiu2021_indrops_of_mouse_gut_epithelial_cells_multiseq_hbc04079/")
library(tidyverse)
library(Seurat)
library(knitr)
ggplot2::theme_set(theme_light(base_size = 14))
opts_chunk[["set"]](
cache = FALSE,
dev = c("png", "pdf"),
error = TRUE,
highlight = TRUE,
message = FALSE,
prompt = FALSE,
tidy = FALSE,
warning = FALSE)
seurat <- readRDS("data/seurat.metadata.RDS")
mdata <- seurat@meta.data
View(counts)
View(mdata)
View(mdata)
View(mdata)
seurat <- readRDS("data/06_bcbio_to_seurat/seurat.bcbio.RDS")
# Mitochondrial ratio
seurat$log10GenesPerUMI <- log10(seurat$nFeature_RNA) / log10(seurat$nCount_RNA)
mito_genes <- read_csv("tables/mitochondrial_genes_mouse.csv")
# Compute percent mito ratio
seurat$mitoRatio <- PercentageFeatureSet(object = seurat,
features = mito_genes$ensembl_gene_id)
seurat$mitoRatio <- seurat@meta.data$mitoRatio / 100
# note if trimmed sample barcodes used or not
metadata1 <- seurat@meta.data
metadata1$cells <- rownames(metadata1)
metadata1 <- metadata1 %>%
dplyr::rename(seq_folder = orig.ident,
nUMI = nCount_RNA,
nGene = nFeature_RNA)
metadata1$sample_id <- str_split_fixed((metadata1$cells),":",2)[,1]
metadata2 <- metadata1 %>% left_join(metadata, by = c("sample_id" = "bcbio_id"))
# Metadata
metadata <- read_csv("tables/metadata.csv", col_types = "ccccfff")
metadata2 <- metadata1 %>% left_join(metadata, by = c("sample_id" = "bcbio_id"))
metadata2$seq_folder <- metadata2$sample_name
row.names(metadata2) <- metadata2$cells
seurat@meta.data <- metadata2
saveRDS(seurat, "data/seurat.metadata.RDS")
seurat <- readRDS("data/seurat.metadata.RDS")
metadata2 <- seurat@meta.data
View(mdata)
View(metadata2)
setwd("~/Desktop/code/single_cell/chiu2021_indrops_of_mouse_gut_epithelial_cells_multiseq_hbc04079/")
seurat <- readRDS("data/seurat.metadata.RDS")
metadata2 <- seurat@meta.data
?write_csv
View(metadata2)
View(metadata2)
View(metadata2)
View(metadata2)
View(metadata2)
metadata2$cellid <- str_replace(metadata2$cells, "chiu2021", "")
metadata2$cellid <- str_replace_all(metadata2$cellid, "-", "")
metadata2$cellid <- str_replace_all(metadata2$cellid, ":", "")
write_csv(metadata2, "tables/good_cells_metadata.csv")
View(metadata2)
setwd("~/Desktop/code/overmoyer2021_RNAseq_analysis_of_inflammatory_breast_cancer_hbc04141/")
se <- readRDS("data/bcbio-se.rds")
metadata <- colData(se) %>%
as_tibble(rownames = NULL) %>%
dplyr::select(sample, tissue)
metadata <- colData(se) %>%
as_tibble(rownames = NULL)
View(metadata)
metadata <- colData(se) %>%
as_tibble(rownames = NULL) %>%
dplyr::select(-batch, -phenotype)
metadata
metadata
metrics <- metrics %>%
group_by(tissue) %>%
mutate(position = rank(-total_reads))
metrics <- metrics %>%
group_by(date_of) %>%
mutate(position = rank(-total_reads))
metrics <- metadata(se)$metrics %>%
left_join(metadata, by = c("sample" = "sample"))
metadata
metrics <- metrics %>%
group_by(date_of) %>%
mutate(position = rank(-total_reads))
metrics %>%
ggplot(aes(x = reorder(sample, -total_reads),
y = total_reads/1e6L,
fill = tissue,
group = position)) +
geom_bar(stat = "identity") +
coord_flip() +
scale_y_continuous(name = "mln reads") +
geom_text(aes(label = floor(total_reads/1e6L)), hjust = 0, nudge_y = 0.5)+
xlab("sample") +
ggtitle("Total reads")
metrics %>%
ggplot(aes(x = reorder(sample, -total_reads),
y = total_reads/1e6L,
fill = date,
group = position)) +
geom_bar(stat = "identity") +
coord_flip() +
scale_y_continuous(name = "mln reads") +
geom_text(aes(label = floor(total_reads/1e6L)), hjust = 0, nudge_y = 0.5)+
xlab("sample") +
ggtitle("Total reads")
metrics %>%
ggplot(aes(x = reorder(sample, -total_reads),
y = total_reads/1e6L,
fill = date_of,
group = position)) +
geom_bar(stat = "identity") +
coord_flip() +
scale_y_continuous(name = "mln reads") +
geom_text(aes(label = floor(total_reads/1e6L)), hjust = 0, nudge_y = 0.5)+
xlab("sample") +
ggtitle("Total reads")
metrics %>%
ggplot(aes(x = reorder(sample, -mapped_reads),
y = mapped_reads, fill = date_of)) +
geom_bar(stat = "identity") +
coord_flip() +
scale_y_continuous(name = "mln reads") +
geom_text(aes(label = floor(total_reads/1e6L)), hjust = 0, nudge_y = 0.5)+
xlab("sample") +
ggtitle("Mapped reads")
genes_detected <- colSums(assays(se)[["raw"]] > 0) %>% enframe()
colnames(genes_detected) <- c("sample", "n_genes")
metrics <- metrics %>%
left_join(genes_detected, by = c("sample" = "sample"))
metrics %>%
ggplot(aes(x = reorder(sample, -n_genes),
y = n_genes, fill = date_of)) +
geom_bar(stat = "identity") +
coord_flip() +
geom_text(aes(label = n_genes), hjust = 0, nudge_y = 0.5)+
xlab("sample") +
ylim(0, 35000) +
ggtitle("Number of genes")
metrics %>%
ggplot(aes(x = reorder(sample, -n_genes),
y = n_genes, fill = date_of)) +
geom_bar(stat = "identity") +
coord_flip() +
geom_text(aes(label = n_genes), hjust = 0, nudge_y = 0.5)+
xlab("sample") +
ylim(0, 50000) +
ggtitle("Number of genes")
metrics$date_of
metadata(se)$metrics$date_of <- as_factor(metadata(se)$metrics$date_of)
metrics$date_of <- as_factor(metrics$date_of)
metadata
metrics$date_of
metrics <- metrics %>%
group_by(date_of) %>%
mutate(position = rank(-total_reads))
metrics %>%
ggplot(aes(x = reorder(sample, -total_reads),
y = total_reads/1e6L,
fill = date_of,
group = position)) +
geom_bar(stat = "identity") +
coord_flip() +
scale_y_continuous(name = "mln reads") +
geom_text(aes(label = floor(total_reads/1e6L)), hjust = 0, nudge_y = 0.5)+
xlab("sample") +
ggtitle("Total reads")
genes_detected <- colSums(assays(se)[["raw"]] > 0) %>% enframe()
colnames(genes_detected) <- c("sample", "n_genes")
metrics <- metrics %>%
left_join(genes_detected, by = c("sample" = "sample"))
metrics %>%
ggplot(aes(x = reorder(sample, -n_genes),
y = n_genes, fill = date_of)) +
geom_bar(stat = "identity") +
coord_flip() +
geom_text(aes(label = n_genes), hjust = 0, nudge_y = 0.5)+
xlab("sample") +
ylim(0, 50000) +
ggtitle("Number of genes")
genes_detected <- colSums(assays(se)[["raw"]] > 0) %>% enframe()
colnames(genes_detected) <- c("sample", "n_genes")
metrics <- metrics %>%
left_join(genes_detected, by = c("sample" = "sample"))
metrics %>%
ggplot(aes(x = reorder(sample, -n_genes),
y = n_genes, fill = date_of)) +
geom_bar(stat = "identity") +
coord_flip() +
geom_text(aes(label = n_genes), hjust = 0, nudge_y = 0.5)+
xlab("sample") +
ylim(0, 50000) +
ggtitle("Number of genes")
metrics %>%
ggplot(aes(x = log10(total_reads),
y = n_genes,
color = date_of)) +
geom_point()+
geom_text_repel(aes(label = sample))+
ggtitle("Gene saturation")
library(ggrepel)
metrics %>%
ggplot(aes(x = log10(total_reads),
y = n_genes,
color = date_of)) +
geom_point()+
geom_text_repel(aes(label = sample))+
ggtitle("Gene saturation")
metrics %>%
ggplot(aes(x = reorder(sample, -exonic_rate),
y = exonic_rate * 100,
fill = date_of)) +
geom_bar(stat = "identity") +
geom_text(aes(label = floor(exonic_rate*100)), hjust = 0, nudge_y = 0.5)+
xlab("sample") +
ylab("Exonic rate %") +
ggtitle("Exonic mapping rate") +
coord_flip()
metrics %>%
ggplot(aes(x = reorder(sample, -intronic_rate),
y = intronic_rate * 100,
fill = date_of)) +
geom_bar(stat = "identity") +
coord_flip() +
geom_text(aes(label = floor(intronic_rate*100)),
hjust = 0,
nudge_y = 0.5) +
xlab("sample") +
ylab("Intronic rate %")
metrics %>%
ggplot(aes(x = reorder(sample, -r_rna_rate),
y = r_rna_rate * 100,
fill = date_of)) +
geom_bar(stat = "identity") +
geom_text(aes(label = round(r_rna_rate*100,2)), hjust = 0, nudge_y = 0.5)+
xlab("sample") +
ylab("rRNA rate, %")+
ylim(0, 45) +
ggtitle("rRNA mapping rate") +
coord_flip()
metrics %>%
ggplot(aes(x = reorder(sample, -r_rna_rate),
y = r_rna_rate * 100,
fill = date_of)) +
geom_bar(stat = "identity") +
geom_text(aes(label = round(r_rna_rate*100,2)), hjust = 0, nudge_y = 0.5)+
xlab("sample") +
ylab("rRNA rate, %")+
ylim(0, 1) +
ggtitle("rRNA mapping rate") +
coord_flip()
metrics %>%
ggplot(aes(x = reorder(sample, -x5_3_bias),
y = x5_3_bias,
fill = date_of)) +
geom_bar(stat = "identity") +
geom_text(aes(label = x5_3_bias), hjust = 0, nudge_y = 0.01)+
xlab("sample") +
ylim(0, 1.5)+
ggtitle("5'-3' bias") +
coord_flip()
metrics_small <- metrics %>% dplyr::select(sample, date_of)
assays(se)[["raw"]] %>%
as_tibble() %>%
dplyr::filter(rowSums(.)!=0) %>%
gather(sample, counts) %>%
left_join(metadata, by = c("sample" = "sample")) %>%
ggplot(aes(sample, log2(counts+1), fill = tissue)) +
geom_boxplot() +
coord_flip() +
ggtitle("Counts per gene, all non-zero genes")
assays(se)[["raw"]] %>%
as_tibble() %>%
dplyr::filter(rowSums(.)!=0) %>%
gather(sample, counts) %>%
left_join(metadata, by = c("sample" = "sample")) %>%
ggplot(aes(sample, log2(counts+1), fill = date_of)) +
geom_boxplot() +
coord_flip() +
ggtitle("Counts per gene, all non-zero genes")
metadata$date_of <- as_factor(metadata$date_of)
metrics_small <- metrics %>% dplyr::select(sample, date_of)
assays(se)[["raw"]] %>%
as_tibble() %>%
dplyr::filter(rowSums(.)!=0) %>%
gather(sample, counts) %>%
left_join(metadata, by = c("sample" = "sample")) %>%
ggplot(aes(sample, log2(counts+1), fill = date_of)) +
geom_boxplot() +
coord_flip() +
ggtitle("Counts per gene, all non-zero genes")
init <- function(){
library(biomaRt)
library(tidyverse)
}
init_mart_human <- function(host = "useast.ensembl.org"){
mart <- useMart(biomart = "ENSEMBL_MART_ENSEMBL", host = host)
mart <- useDataset(mart, dataset = "hsapiens_gene_ensembl")
return(mart)
}
mart <- init_mart_human()
library(biomaRt)
library(tidyverse)
genes_info <- getBM(attributes = c("ensembl_gene_id",
"external_gene_name",
"description",
"chromosome_name"),
filters = c("biotype"),
values = list("protein_coding"),
mart = mart)
mart <- init_mart_human()
genes_info <- getBM(attributes = c("ensembl_gene_id",
"external_gene_name",
"description",
"chromosome_name"),
filters = c("biotype"),
values = list("protein_coding"),
mart = mart)
View(genes_info)
#remove transcripts placed on patches
genes_info <- genes_info[grep('PATCH',genes_info$chromosome_name, invert = T),]
#remove HSCHR - alleles
genes_info <- genes_info[grep('HSCHR',genes_info$chromosome_name,invert=T),]
genes_info$chromosome_name
genes_info$chromosome_name %>% table()
genes_info <- genes_info[grep('GL00',genes_info$chromosome_name,invert=T),]
genes_info$chromosome_name %>% table()
#remove transcripts placed on patches
for (remove_chr in c("PATCH", "HSCHR", "GL00", "KI")){
genes_info <- genes_info[grep('PATCH',genes_info$chromosome_name, invert = T),]
}
View(genes_info)
#remove transcripts placed on patches
for (remove_chr in c("PATCH", "HSCHR", "GL00", "KI", "CHR")){
genes_info <- genes_info[grep('PATCH',genes_info$chromosome_name, invert = T),]
}
View(genes_info)
#remove transcripts placed on patches
for (remove_chr in c("PATCH", "HSCHR", "GL00", "KI", "CHR")){
genes_info <- genes_info[grep(remove_chr, genes_info$chromosome_name, invert = T),]
}
View(genes_info)
write_excel_csv(ensembl_w_description, "ensembl_w_description.protein_codin.csv")
genes_info <- genes_info %>% dplyr::select(-chromosome_name) %>% arrange(ensembl_gene_id)
View(genes_info)
write_excel_csv(ensembl_w_description, "ensembl_w_description.protein_coding.csv")
write_excel_csv(genes_info, "ensembl_w_description.protein_coding.csv")
protein_coding_genes <- read_csv("tables/ensembl_w_description.protein_coding.csv")
assays(se)[["raw"]] %>%
as_tibble(rownames = "ensembl_gene_id") %>%
dplyr::filter(ensembl_gene_id %in% protein_coding_genes$ensembl_gene_id) %>%
dplyr::select(-ensembl_gene_id) %>%
dplyr::filter(rowSums(.)!=0) %>%
gather(sample, counts) %>%
left_join(metadata, by = c("sample" = "sample")) %>%
ggplot(aes(sample, log2(counts+1), fill = date_of)) +
geom_boxplot() +
coord_flip() +
ggtitle("Counts per gene, protein_coding_genes")
raw_counts <- assays(se)[["raw"]] %>%
as_tibble() %>%
dplyr::filter(rowSums(.)!=0) %>%
as.matrix()
vst <- vst(raw_counts)
library(DESeq2)
library(DEGreport)
BiocManager::install("DESeq2")
BiocManager::install("DEGreport")
library(DESeq2)
library(DEGreport)
metadata$date_of <- as_factor(metadata$date_of)
metrics_small <- metrics %>% dplyr::select(sample, date_of)
assays(se)[["raw"]] %>%
as_tibble() %>%
dplyr::filter(rowSums(.)!=0) %>%
gather(sample, counts) %>%
left_join(metadata, by = c("sample" = "sample")) %>%
ggplot(aes(sample, log2(counts+1), fill = date_of)) +
geom_boxplot() +
coord_flip() +
ggtitle("Counts per gene, all non-zero genes")
protein_coding_genes <- read_csv("tables/ensembl_w_description.protein_coding.csv")
assays(se)[["raw"]] %>%
as_tibble(rownames = "ensembl_gene_id") %>%
dplyr::filter(ensembl_gene_id %in% protein_coding_genes$ensembl_gene_id) %>%
dplyr::select(-ensembl_gene_id) %>%
dplyr::filter(rowSums(.)!=0) %>%
gather(sample, counts) %>%
left_join(metadata, by = c("sample" = "sample")) %>%
ggplot(aes(sample, log2(counts+1), fill = date_of)) +
geom_boxplot() +
coord_flip() +
ggtitle("Counts per gene, protein_coding_genes")
raw_counts <- assays(se)[["raw"]] %>%
as_tibble() %>%
dplyr::filter(rowSums(.)!=0) %>%
as.matrix()
vst <- vst(raw_counts)
pca <- degPCA(vst, colData(se), condition = "date_of", name = "sample", data = T)[["plot"]]
pca_labels <- pca[["labels"]]
pca_labels <- pca[["labels"]]
pca_data <- pca[["data"]] %>% as_tibble() %>%
dplyr::select(sample, PC1, PC2, date_of)
pca_data %>%
ggplot(aes(x = PC1, y = PC2, color = dafe_of, label = sample)) +
geom_point() +
geom_text_repel() +
xlab(pca_labels$x) +
ylab(pca_labels$y) +
ggtitle(paste0("PCA: ", nrow(vst), " genes"))
pca_data %>%
ggplot(aes(x = PC1, y = PC2, color = date_of, label = sample)) +
geom_point() +
geom_text_repel() +
xlab(pca_labels$x) +
ylab(pca_labels$y) +
ggtitle(paste0("PCA: ", nrow(vst), " genes"))
pca_data$date_of <- as_factor(pca_data$date_of)
pca_data$date_of <- as.factor(pca_data$date_of)
pca_data %>%
ggplot(aes(x = PC1, y = PC2, color = date_of, label = sample)) +
geom_point() +
geom_text_repel() +
xlab(pca_labels$x) +
ylab(pca_labels$y) +
ggtitle(paste0("PCA: ", nrow(vst), " genes"))
raw_counts <- assays(se)[["raw"]] %>%
as_tibble(rownames = "ensembl_gene_id") %>%
dplyr::filter(ensembl_gene_id %in% protein_coding_genes$ensembl_gene_id) %>%
column_to_rownames(var = "ensembl_gene_id") %>%
dplyr::filter(rowSums(.)!=0) %>%
as.matrix()
vst <- vst(raw_counts)
pca <- degPCA(vst, colData(se), condition = "date_of", name = "sample", data = T)[["plot"]]
pca_labels <- pca[["labels"]]
pca_data <- pca[["data"]] %>% as_tibble() %>%
dplyr::select(sample, PC1, PC2, tissue)
pca_data <- pca[["data"]] %>% as_tibble() %>%
dplyr::select(sample, PC1, PC2, date_of)
pca_data %>%
ggplot(aes(x = PC1, y = PC2, color = date_of, label = sample)) +
geom_point() +
geom_text_repel() +
xlab(pca_labels$x) +
ylab(pca_labels$y) +
ggtitle(paste0("PCA:", nrow(vst), " genes"))
pca_data$date_of <- as.factor(pca_data$date_of)
pca_data %>%
ggplot(aes(x = PC1, y = PC2, color = date_of, label = sample)) +
geom_point() +
geom_text_repel() +
xlab(pca_labels$x) +
ylab(pca_labels$y) +
ggtitle(paste0("PCA:", nrow(vst), " genes"))
View(metrics)
View(metadata)
pca <- degPCA(vst, colData(se), condition = "er", name = "sample", data = T)[["plot"]]
pca_labels <- pca[["labels"]]
pca_labels <- pca[["labels"]]
pca_data <- pca[["data"]] %>% as_tibble() %>%
dplyr::select(sample, PC1, PC2, er)
pca_data$er <- as.factor(pca_data$er)
pca_data %>%
ggplot(aes(x = PC1, y = PC2, color = er, label = sample)) +
geom_point() +
geom_text_repel() +
xlab(pca_labels$x) +
ylab(pca_labels$y) +
ggtitle(paste0("PCA:", nrow(vst), " genes"))
pca_data %>%
ggplot(aes(x = PC1, y = PC2, color = er, label = sample)) +
geom_point() +
geom_text_repel(size = 15) +
xlab(pca_labels$x) +
ylab(pca_labels$y) +
ggtitle(paste0("PCA:", nrow(vst), " genes"))
pca_data %>%
ggplot(aes(x = PC1, y = PC2, color = er, label = sample)) +
geom_point(size = 5) +
geom_text_repel(size = 15) +
xlab(pca_labels$x) +
ylab(pca_labels$y) +
ggtitle(paste0("PCA:", nrow(vst), " genes"))
