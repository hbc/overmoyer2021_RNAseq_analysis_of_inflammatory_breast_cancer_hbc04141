# Create annotation file for samples
annotation <- meta[, c("response", "er", "tumor_percentage_high", "date_of")]
# Change colors
heat.colors <- brewer.pal(6, "Blues")
# Plot heatmap
pheatmap(rld_cor,
annotation = annotation,
border = NA,
fontsize = 20)
# Get results for rescue vs wt
contrast <- c("response", "Yes", "No")
resResponse <- results(dds, contrast = contrast, alpha = 0.05)
length(which(resResponse$padj < 0.05))
# Add annotations
resResponse_tb <- resResponse %>%
data.frame() %>%
rownames_to_column(var = "gene") %>%
as_tibble() %>%
left_join(gene_symbol, by = c("gene" = "gene_id"))
resResponse_tb_significant <- dplyr::filter(resResponse_tb, padj < 0.05)
samples_no <- meta %>% dplyr::filter(response == "No") %>% row.names()
counts_no <- txi$abundance %>%
as.data.frame() %>%
dplyr::select(any_of(samples_no)) %>%
rowSums() %>%
as.data.frame() %>%
rownames_to_column(var = "ensembl_gene_id")
colnames(counts_no) <- c("ensembl_gene_id", "no_expression_mean_tpm")
samples_yes <- meta %>% dplyr::filter(response == "Yes") %>% row.names()
counts_yes <- txi$abundance %>%
as.data.frame() %>%
dplyr::select(any_of(samples_yes)) %>%
rowSums() %>%
as.data.frame() %>%
rownames_to_column(var = "ensembl_gene_id")
colnames(counts_yes) <- c("ensembl_gene_id", "yes_expression_mean_tpm")
counts_yes <-counts_yes %>%
left_join(counts_no,
by = c("ensembl_gene_id" = "ensembl_gene_id"))
resResponse_tb_significant <- resResponse_tb_significant %>%
left_join(counts_yes, by = c("gene" = "ensembl_gene_id"))
# Separate into up and down-regulated gene sets
sigResponse_up <- rownames(resResponse)[which(resResponse$padj < 0.01 & resResponse$log2FoldChange > 0)]
sigResponse_down <- rownames(resResponse)[which(resResponse$padj < 0.01 & resResponse$log2FoldChange < 0)]
library(org.Hs.eg.db)
library(clusterProfiler)
resResponse <- results(dds, contrast = contrast, alpha = 0.05)
nrow(resResponse)
bg_genes <- rownames(resResponse)
head(bg_genes)
sigResponse_up
length(sigResponse_up)
## Run GO enrichment analysis
compGO <- enrichGO(gene = sigResponse_up,
universe = bg_genes,
keyType = "ENSEMBL",
OrgDb = "org.Hs.eg.db",
ont = "BP",
qvalueCutoff  = 0.05,
pAdjustMethod = "BH")
dotplot(compGO,
showCategory = 20,
title = "GO (Biological Process) Enrichment Analysis for UP in Treatment (POST)")
## Output results from GO analysis to a table
summary <- data.frame(compGO@result)
View(summary)
## Output results from GO analysis to a table
results_up <- data.frame(compGO@result)
View(results_up)
## Output results from GO analysis to a table
results_up <- data.frame(compGO@result)
## Output results from GO analysis to a table
results_up <- data.frame(compGO@result) %>% dplyr::filter(padjust < 0.05)
View(results_up)
## Output results from GO analysis to a table
results_up <- data.frame(compGO@result) %>% dplyr::filter(p.adjust < 0.05)
## Output results from GO analysis to a table
results_up <- data.frame(compGO@result) %>% dplyr::filter(p.adjust < 0.05)
View(results_up)
dotplot(compGO,
showCategory = 20,
title = "GO (Biological Process) Enrichment \n Analysis for UP in Responders)")
?dotplot
dotplot(compGO,
showCategory = 20,
title = "GO (Biological Process) Enrichment \n Analysis for UP in Responders)",
label_format = 20)
dotplot(compGO,
showCategory = 20,
title = "GO (Biological Process) Enrichment \n Analysis for UP in Responders)",
label_format = 20,
font.size = 10)
## Run GO enrichment analysis
compGO <- enrichGO(gene = sigResponse_up,
universe = bg_genes,
keyType = "ENSEMBL",
OrgDb = "org.Hs.eg.db",
ont = "BP",
qvalueCutoff  = 0.05,
pAdjustMethod = "BH",
readable = TRUE)
dotplot(compGO,
showCategory = 20,
title = "GO (Biological Process) Enrichment \n Analysis for UP in Responders)",
label_format = 20,
font.size = 10)
## Output results from GO analysis to a table
results_up <- data.frame(compGO@result) %>% dplyr::filter(p.adjust < 0.05)
View(results_up)
View(results_up)
compGO <- enrichGO(gene = sigResponse_down,
universe = bg_genes,
keyType = "ENSEMBL",
OrgDb = "org.Hs.eg.db",
ont = "BP",
qvalueCutoff  = 0.05,
pAdjustMethod = "BH",
readable = TRUE)
results_down <- data.frame(compGO@result) %>% dplyr::filter(p.adjust < 0.05)
sigResponse_down
sigResponse_up
sigResponse_down
length(sigResponse_down)
write_csv(results_up, "tables/T20.day8.GO_BP_UP.csv")
results_down <- data.frame(compGO@result) %>% dplyr::filter(p.adjust < 0.05)
results_down <- data.frame(compGO@result)
View(results_down)
results_down <- data.frame(compGO@result) %>% dplyr::filter(p.adjust < 0.05)
nrow(results_down)
## Output results from GO analysis to a table
print("UP")
print("Down")
nrow(results_down)
txi_file <- "data/txi.day1.RDS"
## Create DESeq2Dataset object
dds_file <- "data/dds.day1.RDS"
dds <- readRDS(dds_file)
### Transform counts for data visualization (unsupervised analysis)
rld_file <- "data/rld.day1.RDS"
rld <- readRDS(rld_file)
class(rld) # what type of object is this
# we also need just a matrix of transformed counts
rld_mat <- assay(rld)
# Use the DESeq2 function
plotPCA(rld, intgroup = c("response"))
# Correlation matrix
rld_cor <- cor(rld_mat)
# Get results for rescue vs wt
contrast <- c("response", "Yes", "No")
resResponse <- results(dds, contrast = contrast, alpha = 0.05)
length(which(resResponse$padj < 0.05))
# Separate into up and down-regulated gene sets
sigResponse_up <- rownames(resResponse)[which(resResponse$padj < 0.01 & resResponse$log2FoldChange > 0)]
sigResponse_down <- rownames(resResponse)[which(resResponse$padj < 0.01 & resResponse$log2FoldChange < 0)]
sigResponse_up
sigResponse_down
?compGO
?enrichGO
# Add a column for significant genes
resResponse_tb <- resResponse_tb %>% mutate(threshold = padj < 0.01)
ggplot(resResponse_tb) +
geom_point(aes(x = log2FoldChange, y = -log10(padj), colour = threshold)) +
ggtitle("Response Yes vs No") +
xlab("log2 fold change") +
ylab("-log10 adjusted p-value") +
scale_x_continuous(limits = c(-10,10)) +
scale_y_continuous(limits = c(0, 7.5))+
theme(legend.position = "none",
plot.title = element_text(size = rel(1.5), hjust = 0.5),
axis.title = element_text(size = rel(1.25)))
ggplot(resResponse_tb) +
geom_point(aes(x = log2FoldChange, y = -log10(padj), colour = threshold)) +
ggtitle("Response Yes vs No") +
xlab("log2 fold change") +
ylab("-log10 adjusted p-value") +
scale_x_continuous(limits = c(-10,10)) +
scale_y_continuous(limits = c(0, 7.5))+
theme(legend.position = "none",
plot.title = element_text(size = rel(1.5), hjust = 0.5),
axis.title = element_text(size = rel(1.25))) +
theme_bw()
ggplot(resResponse_tb) +
geom_point(aes(x = log2FoldChange, y = -log10(padj), colour = threshold)) +
ggtitle("Response Yes vs No") +
xlab("log2 fold change") +
ylab("-log10 adjusted p-value") +
scale_x_continuous(limits = c(-10,10)) +
scale_y_continuous(limits = c(0, 7.5))+
theme(legend.position = "none",
plot.title = element_text(size = rel(1.5), hjust = 0.5),
axis.title = element_text(size = rel(1.25)))
ggplot(resResponse_tb) +
geom_point(aes(x = log2FoldChange, y = -log10(padj), colour = threshold)) +
ggtitle("Response Yes vs No") +
xlab("log2 fold change") +
ylab("-log10 adjusted p-value") +
scale_x_continuous(limits = c(-10,10)) +
scale_y_continuous(limits = c(0, 7.5))+
theme(legend.position = "none",
plot.title = element_text(size = rel(1.5), hjust = 0.5),
axis.title = element_text(size = rel(1.25)))  +
theme_bw(legend.title = element_blank())
ggplot(resResponse_tb) +
geom_point(aes(x = log2FoldChange, y = -log10(padj), colour = threshold)) +
ggtitle("Response Yes vs No") +
xlab("log2 fold change") +
ylab("-log10 adjusted p-value") +
scale_x_continuous(limits = c(-10,10)) +
scale_y_continuous(limits = c(0, 7.5))+
theme(legend.position = "none",
plot.title = element_text(size = rel(1.5), hjust = 0.5),
axis.title = element_text(size = rel(1.25)))  +
theme_bw(legend.position = "none")
ggplot(resResponse_tb) +
geom_point(aes(x = log2FoldChange, y = -log10(padj), colour = threshold)) +
ggtitle("Response Yes vs No") +
xlab("log2 fold change") +
ylab("-log10 adjusted p-value") +
scale_x_continuous(limits = c(-10,10)) +
scale_y_continuous(limits = c(0, 7.5))+
theme(legend.position = "none",
plot.title = element_text(size = rel(1.5), hjust = 0.5),
axis.title = element_text(size = rel(1.25)))
View(resResponse_tb)
library(ggrepel)
ggplot(resResponse_tb) +
geom_point(aes(x = log2FoldChange, y = -log10(padj), colour = threshold)) +
ggtitle("Response Yes vs No") +
xlab("log2 fold change") +
ylab("-log10 adjusted p-value") +
scale_x_continuous(limits = c(-10,10)) +
scale_y_continuous(limits = c(0, 7.5))+
theme(legend.position = "none",
plot.title = element_text(size = rel(1.5), hjust = 0.5),
axis.title = element_text(size = rel(1.25))) +
geom_text_repel(aes(symbol))
ggplot(resResponse_tb) +
geom_point(aes(x = log2FoldChange, y = -log10(padj), colour = threshold)) +
ggtitle("Response Yes vs No") +
xlab("log2 fold change") +
ylab("-log10 adjusted p-value") +
scale_x_continuous(limits = c(-10,10)) +
scale_y_continuous(limits = c(0, 7.5))+
theme(legend.position = "none",
plot.title = element_text(size = rel(1.5), hjust = 0.5),
axis.title = element_text(size = rel(1.25))) +
geom_text_repel(aes(label = symbol))
ggplot(resResponse_tb, aex(label = symbol)) +
geom_point(aes(x = log2FoldChange, y = -log10(padj), colour = threshold)) +
ggtitle("Response Yes vs No") +
xlab("log2 fold change") +
ylab("-log10 adjusted p-value") +
scale_x_continuous(limits = c(-10,10)) +
scale_y_continuous(limits = c(0, 7.5))+
theme(legend.position = "none",
plot.title = element_text(size = rel(1.5), hjust = 0.5),
axis.title = element_text(size = rel(1.25))) +
geom_text_repel(aes(label = symbol))
ggplot(resResponse_tb, aes(label = symbol)) +
geom_point(aes(x = log2FoldChange, y = -log10(padj), colour = threshold)) +
ggtitle("Response Yes vs No") +
xlab("log2 fold change") +
ylab("-log10 adjusted p-value") +
scale_x_continuous(limits = c(-10,10)) +
scale_y_continuous(limits = c(0, 7.5))+
theme(legend.position = "none",
plot.title = element_text(size = rel(1.5), hjust = 0.5),
axis.title = element_text(size = rel(1.25))) +
geom_text_repel(aes(label = symbol))
ggplot(resResponse_tb,
aes(label = symbol)) +
geom_point(aes(x = log2FoldChange, y = -log10(padj), colour = threshold)) +
ggtitle("Response Yes vs No") +
xlab("log2 fold change") +
ylab("-log10 adjusted p-value") +
scale_x_continuous(limits = c(-10,10)) +
scale_y_continuous(limits = c(0, 7.5))+
theme(legend.position = "none",
plot.title = element_text(size = rel(1.5), hjust = 0.5),
axis.title = element_text(size = rel(1.25))) +
geom_text_repel(aes(label = symbol))
ggplot(resResponse_tb,
aes(log2FoldChange, -log10(padj), label = symbol)) +
geom_point(aes(colour = threshold)) +
ggtitle("Response Yes vs No") +
xlab("log2 fold change") +
ylab("-log10 adjusted p-value") +
scale_x_continuous(limits = c(-10,10)) +
scale_y_continuous(limits = c(0, 7.5))+
theme(legend.position = "none",
plot.title = element_text(size = rel(1.5), hjust = 0.5),
axis.title = element_text(size = rel(1.25))) +
geom_text_repel(aes(label = symbol))
?geom_text_repel
ggplot(resResponse_tb,
aes(log2FoldChange, -log10(padj), label = symbol)) +
geom_point(aes(colour = threshold)) +
ggtitle("Response Yes vs No") +
xlab("log2 fold change") +
ylab("-log10 adjusted p-value") +
scale_x_continuous(limits = c(-10,10)) +
scale_y_continuous(limits = c(0, 7.5))+
theme(legend.position = "none",
plot.title = element_text(size = rel(1.5), hjust = 0.5),
axis.title = element_text(size = rel(1.25))) +
geom_text_repel(aes(label = symbol), max.overlaps = 100)
ggplot(resResponse_tb,
aes(log2FoldChange, -log10(padj), label = symbol)) +
geom_point(aes(colour = threshold)) +
ggtitle("Response Yes vs No") +
xlab("log2 fold change") +
ylab("-log10 adjusted p-value") +
scale_x_continuous(limits = c(-10,10)) +
scale_y_continuous(limits = c(0, 7.5))+
theme(legend.position = "none",
plot.title = element_text(size = rel(1.5), hjust = 0.5),
axis.title = element_text(size = rel(1.25))) +
geom_text_repel(aes(label = symbol), max.overlaps = 200)
View(resResponse_tb)
# Add a column for significant genes
resResponse_tb <- resResponse_tb %>% mutate(threshold = padj < 0.01)
resResponse_tb$symbol <- ifelse(abs(resResponse_tb$log2FoldChange) > 3, resResponse_tb$symbol, NA)
View(resResponse_tb)
# Add a column for significant genes
resResponse_tb <- resResponse_tb %>% mutate(threshold = padj < 0.01)
resResponse_tb$symbol <- ifelse(abs(resResponse_tb$log2FoldChange) > 3 && resResponse_tb$threshold, resResponse_tb$symbol, NA)
View(resResponse_tb)
resResponse <- results(dds, contrast = contrast, alpha = 0.05)
# Add a column for significant genes
resResponse_tb <- resResponse_tb %>% mutate(threshold = padj < 0.01)
resResponse_tb$symbol <- ifelse(abs(resResponse_tb$log2FoldChange) > 3 && resResponse_tb$threshold, resResponse_tb$symbol, NA)
View(resResponse_tb)
resResponse <- results(dds, contrast = contrast, alpha = 0.05)
length(which(resResponse$padj < 0.05))
# Add annotations
resResponse_tb <- resResponse %>%
data.frame() %>%
rownames_to_column(var = "gene") %>%
as_tibble() %>%
left_join(gene_symbol, by = c("gene" = "gene_id"))
resResponse_tb_significant <- dplyr::filter(resResponse_tb, padj < 0.05)
samples_no <- meta %>% dplyr::filter(response == "No") %>% row.names()
counts_no <- txi$abundance %>%
as.data.frame() %>%
dplyr::select(any_of(samples_no)) %>%
rowSums() %>%
as.data.frame() %>%
rownames_to_column(var = "ensembl_gene_id")
# Add a column for significant genes
resResponse_tb_vis <- resResponse_tb %>% mutate(threshold = padj < 0.01)
View(resResponse_tb_vis)
resResponse_tb$symbol <- ifelse((abs(resResponse_tb$log2FoldChange) > 3) && resResponse_tb$threshold,
resResponse_tb$symbol, NA)
resResponse <- results(dds, contrast = contrast, alpha = 0.05)
length(which(resResponse$padj < 0.05))
# Add annotations
resResponse_tb <- resResponse %>%
data.frame() %>%
rownames_to_column(var = "gene") %>%
as_tibble() %>%
left_join(gene_symbol, by = c("gene" = "gene_id"))
# Add a column for significant genes
resResponse_tb_vis <- resResponse_tb %>% mutate(threshold = padj < 0.01)
resResponse_tb_vis$symbol <- ifelse((abs(resResponse_tb_vis$log2FoldChange) > 3) && resResponse_tb_vis$threshold,
resResponse_tb_vis$symbol, NA)
View(resResponse_tb_vis)
# Add a column for significant genes
resResponse_tb_vis <- resResponse_tb %>% mutate(threshold = padj < 0.01)
View(resResponse_tb_vis)
txi_file <- "data/txi.day8.RDS"
## Create DESeq2Dataset object
dds_file <- "data/dds.day8.RDS"
dds <- readRDS(dds_file)
# Get results for rescue vs wt
contrast <- c("response", "Yes", "No")
resResponse <- results(dds, contrast = contrast, alpha = 0.05)
length(which(resResponse$padj < 0.05))
# Add annotations
resResponse_tb <- resResponse %>%
data.frame() %>%
rownames_to_column(var = "gene") %>%
as_tibble() %>%
left_join(gene_symbol, by = c("gene" = "gene_id"))
resResponse_tb_significant <- dplyr::filter(resResponse_tb, padj < 0.05)
# Add a column for significant genes
resResponse_tb_vis <- resResponse_tb %>% mutate(threshold = padj < 0.01)
View(resResponse_tb_vis)
resResponse_tb_vis$symbol <- ifelse((abs(resResponse_tb_vis$log2FoldChange) > 3) && resResponse_tb_vis$threshold,
resResponse_tb_vis$symbol, NA)
View(resResponse_tb_vis)
# Add a column for significant genes
resResponse_tb_vis <- resResponse_tb %>% mutate(threshold = padj < 0.01)
resResponse_tb_vis$symbol <- ifelse((abs(resResponse_tb_vis$log2FoldChange) > 2),
resResponse_tb_vis$symbol, NA)
View(resResponse_tb_vis)
resResponse_tb_vis$symbol <- ifelse(resResponse_tb_vis$threshold,
resResponse_tb_vis$symbol, NA)
View(resResponse_tb_vis)
ggplot(resResponse_tb_vis,
aes(log2FoldChange, -log10(padj), label = symbol)) +
geom_point(aes(colour = threshold)) +
ggtitle("Response Yes vs No") +
xlab("log2 fold change") +
ylab("-log10 adjusted p-value") +
scale_x_continuous(limits = c(-10,10)) +
scale_y_continuous(limits = c(0, 7.5))+
theme(legend.position = "none",
plot.title = element_text(size = rel(1.5), hjust = 0.5),
axis.title = element_text(size = rel(1.25))) +
geom_text_repel(aes(label = symbol), max.overlaps = 100)
ggplot(resResponse_tb_vis,
aes(log2FoldChange, -log10(padj), label = symbol)) +
geom_point(aes(colour = threshold)) +
ggtitle("Response Yes vs No") +
xlab("log2 fold change") +
ylab("-log10 adjusted p-value") +
scale_x_continuous(limits = c(-10,10)) +
scale_y_continuous(limits = c(0, 7.5))+
theme(legend.position = "none",
plot.title = element_text(size = rel(1.5), hjust = 0.5),
axis.title = element_text(size = rel(1.25)),
anel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank()) +
geom_text_repel(aes(label = symbol), max.overlaps = 100)
ggplot(resResponse_tb_vis,
aes(log2FoldChange, -log10(padj), label = symbol)) +
geom_point(aes(colour = threshold)) +
ggtitle("Response Yes vs No") +
xlab("log2 fold change") +
ylab("-log10 adjusted p-value") +
scale_x_continuous(limits = c(-10,10)) +
scale_y_continuous(limits = c(0, 7.5))+
theme(legend.position = "none",
plot.title = element_text(size = rel(1.5), hjust = 0.5),
axis.title = element_text(size = rel(1.25)),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank()) +
geom_text_repel(aes(label = symbol), max.overlaps = 100)
ggplot(resResponse_tb_vis,
aes(log2FoldChange, -log10(padj), label = symbol)) +
geom_point(aes(colour = threshold)) +
ggtitle("Response Yes vs No") +
xlab("log2 fold change") +
ylab("-log10 adjusted p-value") +
scale_x_continuous(limits = c(-10,10)) +
scale_y_continuous(limits = c(0, 6))+
theme(legend.position = "none",
plot.title = element_text(size = rel(1.5), hjust = 0.5),
axis.title = element_text(size = rel(1.25)),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank()) +
geom_text_repel(aes(label = symbol), max.overlaps = 100)
ggplot(resResponse_tb_vis,
aes(log2FoldChange, -log10(padj), label = symbol)) +
geom_point(aes(colour = threshold)) +
ggtitle("Response Yes vs No") +
xlab("log2 fold change") +
ylab("-log10 adjusted p-value") +
scale_x_continuous(limits = c(-10,10)) +
scale_y_continuous(limits = c(0, 6))+
theme(legend.position = "none",
plot.title = element_text(size = rel(1.5), hjust = 0.5),
axis.title = element_text(size = rel(1.25)),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank()) +
geom_text_repel(aes(label = symbol), max.overlaps = 10)
ggplot(resResponse_tb_vis,
aes(log2FoldChange, -log10(padj), label = symbol)) +
geom_point(aes(colour = threshold)) +
ggtitle("Response Yes vs No") +
xlab("log2 fold change") +
ylab("-log10 adjusted p-value") +
scale_x_continuous(limits = c(-10,10)) +
scale_y_continuous(limits = c(0, 6))+
theme(legend.position = "none",
plot.title = element_text(size = rel(1.5), hjust = 0.5),
axis.title = element_text(size = rel(1.25)),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank()) +
geom_text_repel(aes(label = symbol))
# Add a column for significant genes
resResponse_tb_vis <- resResponse_tb %>% mutate(threshold = padj < 0.01)
resResponse_tb_vis$symbol <- ifelse((abs(resResponse_tb_vis$log2FoldChange) > 1.5),
resResponse_tb_vis$symbol, NA)
resResponse_tb_vis$symbol <- ifelse(resResponse_tb_vis$threshold,
resResponse_tb_vis$symbol, NA)
ggplot(resResponse_tb_vis,
aes(log2FoldChange, -log10(padj), label = symbol)) +
geom_point(aes(colour = threshold)) +
ggtitle("Response Yes vs No") +
xlab("log2 fold change") +
ylab("-log10 adjusted p-value") +
scale_x_continuous(limits = c(-10,10)) +
scale_y_continuous(limits = c(0, 6))+
theme(legend.position = "none",
plot.title = element_text(size = rel(1.5), hjust = 0.5),
axis.title = element_text(size = rel(1.25)),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank()) +
geom_text_repel(aes(label = symbol))
