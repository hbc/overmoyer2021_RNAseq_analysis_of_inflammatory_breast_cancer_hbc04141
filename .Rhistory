plotPCA(rld, intgroup = c("tumor_percentage_high")) + geom_label_repel(aes(label = name))
# Use the DESeq2 function
plotPCA(rld, intgroup = c("date_of")) + geom_label_repel(aes(label = name))
# Correlation matrix
rld_cor <- cor(rld_mat)
meta$study_id <- as.factor(meta$study_id)
# Create annotation file for samples
annotation <- meta[, c("response", "er", "tumor_percentage_high", "date_of")]
# Change colors
heat.colors <- brewer.pal(6, "Blues")
# Plot heatmap
pheatmap(rld_cor,
annotation = annotation,
border = NA,
fontsize = 20)
# Correlation matrix
rld_cor <- cor(rld_mat)
meta$study_id <- as.factor(meta$study_id)
# Create annotation file for samples
annotation <- meta[, c("response", "er", "tumor_percentage_high", "date_of", "study_id")]
# Change colors
heat.colors <- brewer.pal(6, "Blues")
# Plot heatmap
pheatmap(rld_cor,
annotation = annotation,
border = NA,
fontsize = 20)
contrast <- c("response", "pCR", "non-pCR")
resResponse <- results(dds, contrast = contrast, alpha = 0.05)
resResponse <- results(dds, contrast = contrast, alpha = 0.05)
length(which(resResponse$padj < 0.05))
# Add annotations
resResponse_tb <- resResponse %>%
data.frame() %>%
rownames_to_column(var = "gene") %>%
as_tibble() %>%
left_join(gene_symbol, by = c("gene" = "gene_id"))
resResponse_tb_significant <- dplyr::filter(resResponse_tb, padj < 0.05)
samples_no <- meta %>% dplyr::filter(response == "non-pCR") %>% row.names()
counts_no <- txi$abundance %>%
as.data.frame() %>%
dplyr::select(any_of(samples_no)) %>%
rowSums() %>%
as.data.frame() %>%
rownames_to_column(var = "ensembl_gene_id")
samples_yes <- meta %>% dplyr::filter(response == "pCR") %>% row.names()
counts_yes <- txi$abundance %>%
as.data.frame() %>%
dplyr::select(any_of(samples_yes)) %>%
rowSums() %>%
as.data.frame() %>%
rownames_to_column(var = "ensembl_gene_id")
colnames(counts_yes) <- c("ensembl_gene_id", "pCR_expression_mean_tpm")
counts_yes <-counts_yes %>%
left_join(counts_no,
by = c("ensembl_gene_id" = "ensembl_gene_id"))
resResponse_tb_significant <- resResponse_tb_significant %>%
left_join(counts_yes, by = c("gene" = "ensembl_gene_id"))
# Separate into up and down-regulated gene sets
sigResponse_up <- rownames(resResponse)[which(resResponse$padj < 0.01 & resResponse$log2FoldChange > 0)]
sigResponse_down <- rownames(resResponse)[which(resResponse$padj < 0.01 & resResponse$log2FoldChange < 0)]
# Add a column for significant genes
resResponse_tb_vis <- resResponse_tb %>% mutate(threshold = padj < 0.01)
# don't show labels for lfc < 1.5
resResponse_tb_vis$symbol <- ifelse((abs(resResponse_tb_vis$log2FoldChange) > 1.5),
resResponse_tb_vis$symbol, "")
# don't show labels for non-significant genes
resResponse_tb_vis$symbol <- ifelse(resResponse_tb_vis$threshold,
resResponse_tb_vis$symbol, "")
View(resResponse_tb_vis)
#fig4b
# suggested by Jennifer
dont_show <- c("C20orf204", "B4GALNT4", "SMIM34B", "ARHGAP33",
"ATRNL1", "CROCC2", "CEL", "FLG", "KIAA1549L",
"AHRR", "SLC25A27", "CPLX1", "SNX10", "STX11",
"FUCA", "ACP5", "M84A4A", "GM2A", "TYROBP", "GBP5",
"SASH3", "CTSL", "TFEC", "DNASE2", "IGSF6", "IF130", "LGALS3",
"FCER1G", "VNN2", "SELPLG", "GPX1", "TAGAP", "PRDX1", "SLAMF8",
"SSR4", "LST1", "VMO1", "OMD", "PRB2", "TBX2", "LIPA", "COMMD3-BMI1",
"SOWAHD", "LGALS2", "SLAMF6", "SH2D1A", "ALDH2", "PTPRCAP")
dont_show %in% resResponse_tb_vis$symbol
done_show[dont_show %in% resResponse_tb_vis$symbol]
dont_show[dont_show %in% resResponse_tb_vis$symbol]
dont_show[!dont_show %in% resResponse_tb_vis$symbol]
#fig4b
# suggested by Jennifer
dont_show <- c("C20orf204", "B4GALNT4", "SMIM34B", "ARHGAP33",
"ATRNL1", "CROCC2", "CEL", "FLG", "KIAA1549L",
"AHRR", "SLC25A27", "CPLX1", "SNX10", "STX11",
"FUCA1", "ACP5", "MS4A4A", "GM2A", "TYROBP", "GBP5",
"SASH3", "CTSL", "TFEC", "DNASE2", "IGSF6", "IFI30", "LGALS3",
"FCER1G", "VNN2", "SELPLG", "GPX1", "TAGAP", "PRDX1", "SLAMF8",
"SSR4", "LST1", "VMO1", "OMD", "PRB2", "TBX21", "LIPA", "COMMD3-BMI1",
"SOWAHD", "LGALS2", "SLAMF6", "SH2D1A", "ALDH2", "PTPRCAP")
dont_show[!dont_show %in% resResponse_tb_vis$symbol]
resResponse_tb_vis[resResponse_tb_vis$symbol %in% dont_show]$symbol <- ""
resResponse_tb_vis[,resResponse_tb_vis$symbol %in% dont_show]$symbol <- ""
resResponse_tb_vis[resResponse_tb_vis$symbol %in% dont_show,]$symbol <- ""
# a handful of extreme genes are not shown, like PRSS33
fig4b <- ggplot(resResponse_tb_vis,
aes(log2FoldChange, -log10(padj), label = symbol)) +
geom_point(aes(colour = threshold)) +
ggtitle("Response pCR vs non-pCR") +
xlab("log2 fold change") +
ylab("-log10 adjusted p-value") +
scale_x_continuous(limits = c(-10, 10)) +
scale_y_continuous(limits = c(0, 7)) +
theme(legend.position = "none",
plot.title = element_text(size = rel(1.5), hjust = 0.5),
axis.title = element_text(size = rel(1.25)),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank()) +
geom_text_repel(aes(label = symbol),
data = subset(resResponse_tb_vis, log2FoldChange > 0),
size = 5,
min.segment.length = 0,
segment.size = 0.1,
segment.color = "grey50",
direction     = "both",
max.overlaps = Inf,
segment.linetype = 5,
max.iter =  Inf,
hjust = "right",
xlim = c(4, 9),
force = 5,
force_pull = 0
) +
geom_text_repel(aes(label = symbol),
data = subset(resResponse_tb_vis, log2FoldChange < 0),
size = 5,
min.segment.length = 0,
segment.size = 0.1,
segment.color = "grey50",
direction     = "both",
max.overlaps = Inf,
segment.linetype = 5,
max.iter =  Inf,
hjust = "left",
xlim = c(-9, -4),
force = 5,
force_pull = 0
)
saveRDS(fig4b, "data/fig4b.RDS")
fig4a <- readRDS("data/fig4a.RDS")
fig4b <- readRDS("data/fig4b.RDS")
pdf("fig4.pdf", width = 30, height = 15)
plot_grid(fig4a, fig4b,
labels = "AUTO",
label_size = 20)
dev.off()
# a handful of extreme genes are not shown, like PRSS33
fig4b <- ggplot(resResponse_tb_vis,
aes(log2FoldChange, -log10(padj), label = symbol)) +
geom_point(aes(colour = threshold)) +
ggtitle("Response pCR vs non-pCR") +
xlab("log2 fold change") +
ylab("-log10 adjusted p-value") +
scale_x_continuous(limits = c(-10, 10)) +
scale_y_continuous(limits = c(0, 7)) +
theme(legend.position = "none",
plot.title = element_text(size = rel(1.5), hjust = 0.5),
axis.title = element_text(size = rel(1.25)),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank()) +
geom_text_repel(aes(label = symbol),
data = subset(resResponse_tb_vis, log2FoldChange > 0),
size = 5,
min.segment.length = 0,
segment.size = 0.1,
segment.color = "grey50",
direction     = "both",
max.overlaps = Inf,
segment.linetype = 5,
max.iter =  Inf,
hjust = "right",
xlim = c(5, 10),
force = 5,
force_pull = 0
) +
geom_text_repel(aes(label = symbol),
data = subset(resResponse_tb_vis, log2FoldChange < 0),
size = 5,
min.segment.length = 0,
segment.size = 0.1,
segment.color = "grey50",
direction     = "both",
max.overlaps = Inf,
segment.linetype = 5,
max.iter =  Inf,
hjust = "left",
xlim = c(-9, -4),
force = 5,
force_pull = 0
)
saveRDS(fig4b, "data/fig4b.RDS")
fig4a <- readRDS("data/fig4a.RDS")
fig4b <- readRDS("data/fig4b.RDS")
pdf("fig4.pdf", width = 30, height = 15)
plot_grid(fig4a, fig4b,
labels = "AUTO",
label_size = 20)
dev.off()
# a handful of extreme genes are not shown, like PRSS33
fig4b <- ggplot(resResponse_tb_vis,
aes(log2FoldChange, -log10(padj), label = symbol)) +
geom_point(aes(colour = threshold)) +
ggtitle("Response pCR vs non-pCR") +
xlab("log2 fold change") +
ylab("-log10 adjusted p-value") +
scale_x_continuous(limits = c(-10, 10)) +
scale_y_continuous(limits = c(0, 7)) +
theme(legend.position = "none",
plot.title = element_text(size = rel(1.5), hjust = 0.5),
axis.title = element_text(size = rel(1.25)),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank()) +
geom_text_repel(aes(label = symbol),
data = subset(resResponse_tb_vis, log2FoldChange > 0),
size = 5,
min.segment.length = 0,
segment.size = 0.1,
segment.color = "grey50",
direction     = "both",
max.overlaps = Inf,
segment.linetype = 5,
max.iter =  Inf,
hjust = "right",
xlim = c(3, 10),
force = 5,
force_pull = 0
) +
geom_text_repel(aes(label = symbol),
data = subset(resResponse_tb_vis, log2FoldChange < 0),
size = 5,
min.segment.length = 0,
segment.size = 0.1,
segment.color = "grey50",
direction     = "both",
max.overlaps = Inf,
segment.linetype = 5,
max.iter =  Inf,
hjust = "left",
xlim = c(-9, -4),
force = 5,
force_pull = 0
)
saveRDS(fig4b, "data/fig4b.RDS")
fig4a <- readRDS("data/fig4a.RDS")
fig4b <- readRDS("data/fig4b.RDS")
pdf("fig4.pdf", width = 30, height = 15)
plot_grid(fig4a, fig4b,
labels = "AUTO",
label_size = 20)
dev.off()
# a handful of extreme genes are not shown, like PRSS33
fig4b <- ggplot(resResponse_tb_vis,
aes(log2FoldChange, -log10(padj), label = symbol)) +
geom_point(aes(colour = threshold)) +
ggtitle("Response pCR vs non-pCR") +
xlab("log2 fold change") +
ylab("-log10 adjusted p-value") +
scale_x_continuous(limits = c(-10, 10)) +
scale_y_continuous(limits = c(0, 7)) +
theme(legend.position = "none",
plot.title = element_text(size = rel(1.5), hjust = 0.5),
axis.title = element_text(size = rel(1.25)),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank()) +
geom_text_repel(aes(label = symbol),
data = subset(resResponse_tb_vis, log2FoldChange > 0),
size = 5,
min.segment.length = 0,
segment.size = 0.1,
segment.color = "grey50",
direction     = "both",
max.overlaps = Inf,
segment.linetype = 5,
max.iter =  Inf,
hjust = "right",
xlim = c(3, 10),
force = 5,
force_pull = 0, nudge_y = 1
) +
geom_text_repel(aes(label = symbol),
data = subset(resResponse_tb_vis, log2FoldChange < 0),
size = 5,
min.segment.length = 0,
segment.size = 0.1,
segment.color = "grey50",
direction     = "both",
max.overlaps = Inf,
segment.linetype = 5,
max.iter =  Inf,
hjust = "left",
xlim = c(-9, -4),
force = 5,
force_pull = 0
)
saveRDS(fig4b, "data/fig4b.RDS")
fig4a <- readRDS("data/fig4a.RDS")
fig4b <- readRDS("data/fig4b.RDS")
pdf("fig4.pdf", width = 30, height = 15)
plot_grid(fig4a, fig4b,
labels = "AUTO",
label_size = 20)
dev.off()
# a handful of extreme genes are not shown, like PRSS33
fig4b <- ggplot(resResponse_tb_vis,
aes(log2FoldChange, -log10(padj), label = symbol)) +
geom_point(aes(colour = threshold)) +
ggtitle("Response pCR vs non-pCR") +
xlab("log2 fold change") +
ylab("-log10 adjusted p-value") +
scale_x_continuous(limits = c(-10, 10)) +
scale_y_continuous(limits = c(0, 7)) +
theme(legend.position = "none",
plot.title = element_text(size = rel(1.5), hjust = 0.5),
axis.title = element_text(size = rel(1.25)),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank()) +
geom_text_repel(aes(label = symbol),
data = subset(resResponse_tb_vis, log2FoldChange > 0),
size = 5,
min.segment.length = 0,
segment.size = 0.1,
segment.color = "grey50",
direction     = "both",
max.overlaps = Inf,
segment.linetype = 5,
max.iter =  Inf,
hjust = "right",
xlim = c(3, 10),
force = 5,
force_pull = 0
) +
geom_text_repel(aes(label = symbol),
data = subset(resResponse_tb_vis, log2FoldChange < 0),
size = 5,
min.segment.length = 0,
segment.size = 0.1,
segment.color = "grey50",
direction     = "both",
max.overlaps = Inf,
segment.linetype = 5,
max.iter =  Inf,
hjust = "left",
xlim = c(-9, -4),
force = 5,
force_pull = 0
)
saveRDS(fig4b, "data/fig4b.RDS")
fig4a <- readRDS("data/fig4a.RDS")
fig4b <- readRDS("data/fig4b.RDS")
pdf("fig4.pdf", width = 30, height = 15)
plot_grid(fig4a, fig4b,
labels = "AUTO",
label_size = 20)
dev.off()
# a handful of extreme genes are not shown, like PRSS33
fig4b <- ggplot(resResponse_tb_vis,
aes(log2FoldChange, -log10(padj), label = symbol)) +
geom_point(aes(colour = threshold)) +
ggtitle("Response pCR vs non-pCR") +
xlab("log2 fold change") +
ylab("-log10 adjusted p-value") +
scale_x_continuous(limits = c(-10, 10)) +
scale_y_continuous(limits = c(0, 7)) +
theme(legend.position = "none",
plot.title = element_text(size = rel(1.5), hjust = 0.5),
axis.title = element_text(size = rel(1.25)),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank()) +
geom_label_repel(aes(label = symbol),
data = subset(resResponse_tb_vis, log2FoldChange > 0),
size = 5,
min.segment.length = 0,
segment.size = 0.1,
segment.color = "grey50",
direction     = "both",
max.overlaps = Inf,
segment.linetype = 5,
max.iter =  Inf,
hjust = "right",
xlim = c(3, 10),
force = 5,
force_pull = 0
) +
geom_text_repel(aes(label = symbol),
data = subset(resResponse_tb_vis, log2FoldChange < 0),
size = 5,
min.segment.length = 0,
segment.size = 0.1,
segment.color = "grey50",
direction     = "both",
max.overlaps = Inf,
segment.linetype = 5,
max.iter =  Inf,
hjust = "left",
xlim = c(-9, -4),
force = 5,
force_pull = 0
)
saveRDS(fig4b, "data/fig4b.RDS")
pdf("fig4.pdf", width = 30, height = 15)
plot_grid(fig4a, fig4b,
labels = "AUTO",
label_size = 20)
dev.off()
# a handful of extreme genes are not shown, like PRSS33
fig4b <- ggplot(resResponse_tb_vis,
aes(log2FoldChange, -log10(padj), label = symbol)) +
geom_point(aes(colour = threshold)) +
ggtitle("Response pCR vs non-pCR") +
xlab("log2 fold change") +
ylab("-log10 adjusted p-value") +
scale_x_continuous(limits = c(-10, 10)) +
scale_y_continuous(limits = c(0, 7)) +
theme(legend.position = "none",
plot.title = element_text(size = rel(1.5), hjust = 0.5),
axis.title = element_text(size = rel(1.25)),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank()) +
geom_label_repel(aes(label = symbol),
data = subset(resResponse_tb_vis, log2FoldChange > 0),
size = 5,
min.segment.length = 0,
segment.size = 0.1,
segment.color = "grey50",
direction     = "both",
max.overlaps = Inf,
segment.linetype = 5,
max.iter =  Inf,
hjust = "right",
xlim = c(3, 10),
force = 5,
force_pull = 0
) +
geom_label_repel(aes(label = symbol),
data = subset(resResponse_tb_vis, log2FoldChange < 0),
size = 5,
min.segment.length = 0,
segment.size = 0.1,
segment.color = "grey50",
direction     = "both",
max.overlaps = Inf,
segment.linetype = 5,
max.iter =  Inf,
hjust = "left",
xlim = c(-9, -4),
force = 5,
force_pull = 0
)
saveRDS(fig4b, "data/fig4b.RDS")
pdf("fig4.pdf", width = 30, height = 15)
plot_grid(fig4a, fig4b,
labels = "AUTO",
label_size = 20)
dev.off()
# Load the data and metadata
meta <- read_csv("tables/metadata_corrected.csv") %>%
column_to_rownames(var = "samplename") %>%
dplyr::filter(treatment == "pre") %>%
drop_na(response)
meta$response <- str_replace(meta$response, "Yes", "pCR")
meta$response <- str_replace(meta$response, "No", "non-pCR")
protein_coding_genes <- read_csv("tables/ensembl_w_description.protein_coding.csv")
annotation_file <- "data/ensembl94_hg38_annotations.txt"
gene_symbol_file <- "data/gene_symbol.txt"
hsdb <- read_tsv(annotation_file)
hsdb <- read_tsv(annotation_file)
gene_symbol <- read_tsv(gene_symbol_file)
# Read in  a tx2gene file with transcript identifiers in the first column and gene identifiers in the second column
#wormdb <- read.table("ensembl94_WBcel235_annotations.txt", sep="\t", header=T)
tx2gene <- hsdb[, c("tx_id", "gene_id")]
# Run tximport
txi_file <- "data/txi.day1.RDS"
txi <- readRDS(txi_file)
# Look at the counts
class(txi)
attributes(txi)
txi$counts %>% View()
## Create DESeq2Dataset object
dds_file <- "data/dds.day1.RDS"
meta$treatment <- as.factor(meta$treatment)
meta$response <- as.factor(meta$response)
meta$er <- as.factor(meta$er)
meta$date_of <- as.factor(meta$date_of)
meta$tumor_percentage <- as.factor(meta$tumor_percentage)
meta$tumor_percentage_high <- as.factor(meta$tumor_percentage_high)
dds <- readRDS(dds_file)
counts <- counts(dds, normalized = TRUE)
design <- as.data.frame(colData(dds))
res <- results(dds)
res <- results(dds)
degQC(counts, design[["response"]], pvalue = res[["pvalue"]])
degQC(counts, design[["er"]], pvalue = res[["pvalue"]])
mdata <- colData(dds) %>%  as.data.frame()  %>%
dplyr::select(response, er, date_of, tumor_percentage_high)
